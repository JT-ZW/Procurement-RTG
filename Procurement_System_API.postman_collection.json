{
  "info": {
    "name": "Procurement System API",
    "description": "Complete API testing collection for the multi-tenant procurement system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "unit_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@hotel.com\",\n  \"password\": \"SecurePass123!\",\n  \"full_name\": \"System Administrator\",\n  \"role\": \"super_admin\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Registration successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "admin@hotel.com"
                },
                {
                  "key": "password",
                  "value": "SecurePass123!"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has tokens\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('access_token');",
                  "    pm.expect(response).to.have.property('refresh_token');",
                  "    ",
                  "    // Save tokens to collection variables",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token);",
                  "    pm.collectionVariables.set('user_id', response.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "üè¢ Units Management",
      "item": [
        {
          "name": "Create Unit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Grand Hotel Downtown\",\n  \"code\": \"GHD001\",\n  \"description\": \"Main downtown hotel location\",\n  \"address\": \"123 Main Street, Downtown\",\n  \"contact_person\": \"John Manager\",\n  \"contact_email\": \"john@grandhotel.com\",\n  \"contact_phone\": \"+1-555-0123\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/units/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "units", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Unit created successfully\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('unit_id', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Units",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/units/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "units", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Unit by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/units/{{unit_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "units", "{{unit_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Users Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"manager@hotel.com\",\n  \"password\": \"ManagerPass123!\",\n  \"full_name\": \"Unit Manager\",\n  \"role\": \"unit_manager\",\n  \"unit_assignments\": [\n    {\n      \"unit_id\": \"{{unit_id}}\",\n      \"role\": \"unit_manager\",\n      \"is_primary\": true\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/users/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", ""]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "üì¶ Products Management",
      "item": [
        {
          "name": "Create Product Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Kitchen Supplies\",\n  \"description\": \"All kitchen-related products and equipment\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/products/categories/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "products", "categories", ""]
            }
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Premium Coffee Beans\",\n  \"description\": \"High-quality arabica coffee beans\",\n  \"sku\": \"COFFEE-001\",\n  \"unit_of_measure\": \"kg\",\n  \"unit_price\": 25.50,\n  \"minimum_stock_level\": 10,\n  \"maximum_stock_level\": 100,\n  \"reorder_point\": 20,\n  \"is_active\": true,\n  \"specifications\": {\n    \"origin\": \"Colombia\",\n    \"roast_level\": \"Medium\",\n    \"certification\": \"Organic\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/products/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "products", ""]
            }
          }
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/products/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "products", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üè™ Suppliers Management",
      "item": [
        {
          "name": "Create Supplier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Premium Food Distributors\",\n  \"supplier_code\": \"PFD001\",\n  \"email\": \"orders@premiumfood.com\",\n  \"phone\": \"+1-555-0456\",\n  \"address\": \"456 Supply Ave, Industrial District\",\n  \"contact_person\": \"Sarah Supplier\",\n  \"tax_id\": \"TAX123456789\",\n  \"payment_terms\": \"Net 30\",\n  \"status\": \"active\",\n  \"categories\": [\"Kitchen Supplies\", \"Food & Beverage\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/suppliers/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "suppliers", ""]
            }
          }
        },
        {
          "name": "Get All Suppliers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/suppliers/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "suppliers", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Stock Management",
      "item": [
        {
          "name": "Add Stock Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 50,\n  \"unit_price\": 25.50,\n  \"transaction_type\": \"receipt\",\n  \"reference_number\": \"PO-2025-001\",\n  \"notes\": \"Initial stock purchase\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/stock/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stock", ""]
            }
          }
        },
        {
          "name": "Get Stock Levels",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/stock/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stock", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Purchase Requisitions",
      "item": [
        {
          "name": "Create Purchase Requisition",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Monthly Kitchen Supply Requisition\",\n  \"description\": \"Regular monthly order for kitchen supplies\",\n  \"required_by_date\": \"2025-08-15T10:00:00Z\",\n  \"business_justification\": \"Essential supplies for daily operations\",\n  \"estimated_total_value\": 500.00,\n  \"priority\": \"medium\",\n  \"items\": [\n    {\n      \"line_number\": 1,\n      \"product_name\": \"Premium Coffee Beans\",\n      \"quantity_requested\": 20,\n      \"unit_of_measure\": \"kg\",\n      \"estimated_unit_price\": 25.50,\n      \"estimated_total_price\": 510.00\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/requisitions/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "requisitions", ""]
            }
          }
        },
        {
          "name": "Get All Requisitions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-Current-Unit",
                "value": "{{unit_id}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/requisitions/?skip=0&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "requisitions", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üëë Admin Dashboard",
      "item": [
        {
          "name": "Get Dashboard Overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "dashboard"]
            }
          }
        },
        {
          "name": "Get System Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "stats"]
            }
          }
        },
        {
          "name": "Access Admin Dashboard UI",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["admin", "dashboard"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if needed",
          "if (pm.collectionVariables.get('access_token')) {",
          "    const token = pm.collectionVariables.get('access_token');",
          "    if (token && token.includes('.')) {",
          "        try {",
          "            const tokenData = JSON.parse(atob(token.split('.')[1]));",
          "            const now = Math.floor(Date.now() / 1000);",
          "            ",
          "            if (tokenData.exp < now + 300) {",
          "                console.log('Token will expire soon, consider refreshing');",
          "            }",
          "        } catch (e) {",
          "            console.log('Could not parse token for expiry check');",
          "        }",
          "    }",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test assertions",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Check for common error responses",
          "if (pm.response.code >= 400) {",
          "    pm.test('Error response has message', function () {",
          "        const response = pm.response.json();",
          "        pm.expect(response).to.have.property('detail');",
          "    });",
          "}"
        ]
      }
    }
  ]
}
